{"version":"V2.0","versionNumber":"V2.3.4","type":"stickc-plus2","components":[{"name":"screen","type":"screen","layer":0,"screenId":"builtin","screenName":"","id":"__stickc-plus2_screen","createTime":1755164766842,"x":0,"y":0,"width":135,"height":240,"backgroundColor":"#000000","size":0,"isSelected":true},{"name":"dist0","type":"label","layer":1,"screenId":"builtin","screenName":"","id":"h#ehEBMPHvq+9@z_","createTime":1755184442538,"x":10,"y":10,"color":"#ffffff","backgroundColor":"#222222","text":"Dist0:","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false},{"name":"dist1","type":"label","layer":1,"screenId":"builtin","screenName":"","id":"kp^Ezt3AK=!e18IR","createTime":1755184442538,"x":10,"y":35,"color":"#ffffff","backgroundColor":"#222222","text":"Dist1:","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false},{"name":"dist2","type":"label","layer":2,"screenId":"builtin","screenName":"","id":"t&zoHL!rO-cTEeCD","createTime":1755184442538,"x":10,"y":60,"color":"#ffffff","backgroundColor":"#222222","text":"Dist2:","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false},{"name":"battery","type":"label","layer":3,"screenId":"builtin","screenName":"","id":"oM1$TNaE&lZFvyT6","createTime":1755184442538,"x":9,"y":105,"color":"#ffffff","backgroundColor":"#222222","text":"Battery:","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false},{"name":"label0","type":"label","layer":4,"screenId":"builtin","screenName":"","id":"yrQkLZJ#-wr``piE","createTime":1755184442538,"x":70,"y":10,"color":"#ffffff","backgroundColor":"#222222","text":"dis0","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false},{"name":"label1","type":"label","layer":5,"screenId":"builtin","screenName":"","id":"we&k-Q@_Y8veI8L6","createTime":1755184442538,"x":70,"y":35,"color":"#ffffff","backgroundColor":"#222222","text":"dis1","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false},{"name":"label2","type":"label","layer":6,"screenId":"builtin","screenName":"","id":"cB$up6BrWHosmrkN","createTime":1755184442538,"x":70,"y":60,"color":"#ffffff","backgroundColor":"#222222","text":"dis2","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false},{"name":"label3","type":"label","layer":7,"screenId":"builtin","screenName":"","id":"d`EI!l1F&8=xpW$=","createTime":1755184442538,"x":88,"y":105,"color":"#ffffff","backgroundColor":"#222222","text":"bat","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false},{"name":"label4","type":"label","layer":1,"screenId":"builtin","screenName":"","id":"x%Y=X+xXQPhPJc1_","createTime":1755184442538,"x":10,"y":85,"color":"#ffffff","backgroundColor":"#222222","text":"Dist3:","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false},{"name":"dist3","type":"label","layer":2,"screenId":"builtin","screenName":"","id":"sN50opi9NjEx7=HR","createTime":1755184442538,"x":70,"y":85,"color":"#ffffff","backgroundColor":"#222222","text":"dis2","font":"Widgets.FONTS.DejaVu18","rotation":0,"isSelected":false}],"resources":[{"hardware":["hardware_button","hardware_pin_button","imu","speaker","ir"]},{"unit":["unit_uwb"]}],"units":[{"type":"unit_uwb","name":"uwb_0","portList":["A","Custom"],"portType":"A","userPort":[22,21],"id":"m#`%G6XNVN^0graP","createTime":1757146131786,"initBlockId":"Y2*_zW0D`-7c`jMLIJ!j"}],"hats":[],"bases":[],"i2cs":[],"blockly":"<variables><variable id=\"P!jr;0u]KY!KB*N{={G8\">distance0</variable><variable id=\"|utR-9Rg$LkvX9KPWwO#\">distance1</variable><variable id=\"R.WtS@XY-c4}^LjIlUU:\">distance2</variable><variable id=\"QrYD/9brW-pa7u#1V1^)\">distance3</variable></variables><block type=\"basic_on_setup\" id=\"setup_block\" deletable=\"false\" x=\"50\" y=\"70\"><mutation isBegin=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_begin\" id=\"CTlvbO-q8fY_W+gmo:Ef\"><next><block type=\"unit_uwb_init\" id=\"Y2*_zW0D`-7c`jMLIJ!j\"><mutation mode=\"tag\"></mutation><field name=\"NAME\">uwb_0</field><field name=\"MODE\">tag</field><field name=\"VERBOSE\">False</field><value name=\"UART\"><shadow type=\"unit_uwb_id_option\" id=\"-NLSqc]$dE2z[HwYlo7^\"><field name=\"VALUE\">2</field></shadow></value><value name=\"ID\"><shadow type=\"math_number\" id=\"!-oV98OZvq#`C^M`W!8Z\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">0</field></shadow></value><next><block type=\"unit_uwb_set_measuring_interval\" id=\"_g#_$8gj:_LE%Y.!PJ72\"><field name=\"NAME\">uwb_0</field><value name=\"INTERVAL\"><shadow type=\"math_slider\" id=\"Vhz_=}J(4jN?0JBfYUiE\"><mutation max=\"50\" min=\"5\" step=\"1\" precision=\"1\"></mutation><field name=\"NUM\">5</field></shadow></value><next><block type=\"unit_uwb_set_measurement\" id=\"C}q%^[bsrhD%]mOP}#CZ\"><field name=\"NAME\">uwb_0</field><field name=\"OPTION\">True</field><next><block type=\"controls_if\" id=\"kX)JgO7[K?^+x/9Ej^Bh\"><value name=\"IF0\"><block type=\"unit_uwb_isconnected\" id=\"lgh)CXde$Yni~G%/|ZX-\"><field name=\"NAME\">uwb_0</field></block></value><statement name=\"DO0\"><block type=\"text_print\" id=\"%+,I_Hc08xT%;ZZ[0x:}\"><value name=\"TEXT\"><shadow type=\"text\" id=\"C[R~|zY5as:1v3OzCTQX\"><field name=\"TEXT\">Tag connesso</field></shadow></value></block></statement></block></next></block></next></block></next></block></next></block></statement></block><block type=\"basic_on_loop\" id=\"loop_block\" deletable=\"false\" x=\"70\" y=\"370\"><mutation isUpdate=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_update\" id=\"G(nx|CF,X+pn*i:a@^H9\"><next><block type=\"unit_uwb_tick\" id=\"K-,0DidizRTQH9`{AH-%\"><field name=\"NAME\">uwb_0</field><next><block type=\"variables_set\" id=\"+RJ=opjQ9ZV9X*GhJ%U:\"><field name=\"VAR\" id=\"P!jr;0u]KY!KB*N{={G8\">distance0</field><value name=\"VALUE\"><block type=\"unit_uwb_get_distance\" id=\"MoH|2y=bVaVfbA;]J}T`\"><field name=\"NAME\">uwb_0</field><value name=\"VALUE\"><shadow type=\"math_slider\" id=\"]%NWNTMkDjO^4zVr8K_C\"><mutation max=\"3\" min=\"0\" step=\"1\" precision=\"1\"></mutation><field name=\"NUM\">0</field></shadow></value></block></value><next><block type=\"variables_set\" id=\"Ogh[L[I0FpqlF63)|wql\"><field name=\"VAR\" id=\"|utR-9Rg$LkvX9KPWwO#\">distance1</field><value name=\"VALUE\"><block type=\"unit_uwb_get_distance\" id=\"scI}vB!?(S+1^PV$LF!y\"><field name=\"NAME\">uwb_0</field><value name=\"VALUE\"><shadow type=\"math_slider\" id=\"@R.[g1VlLN)FGq1HO2kW\"><mutation max=\"3\" min=\"0\" step=\"1\" precision=\"1\"></mutation><field name=\"NUM\">1</field></shadow></value></block></value><next><block type=\"variables_set\" id=\"`.{lCs7?R3(]_vyiI36Y\"><field name=\"VAR\" id=\"R.WtS@XY-c4}^LjIlUU:\">distance2</field><value name=\"VALUE\"><block type=\"unit_uwb_get_distance\" id=\"^FH}wmwFBa`;0om7NW|D\"><field name=\"NAME\">uwb_0</field><value name=\"VALUE\"><shadow type=\"math_slider\" id=\"lx8,nIbof2iwYkXzNi`)\"><mutation max=\"3\" min=\"0\" step=\"1\" precision=\"1\"></mutation><field name=\"NUM\">2</field></shadow></value></block></value><next><block type=\"variables_set\" id=\"abjJ04SA=no_-iE%Y44F\"><field name=\"VAR\" id=\"QrYD/9brW-pa7u#1V1^)\">distance3</field><value name=\"VALUE\"><block type=\"unit_uwb_get_distance\" id=\"pOM3$xSoDdQX1]Y+So~9\"><field name=\"NAME\">uwb_0</field><value name=\"VALUE\"><shadow type=\"math_slider\" id=\"x3@aw[QW5yPed?^?pb9+\"><mutation max=\"3\" min=\"0\" step=\"1\" precision=\"1\"></mutation><field name=\"NUM\">3</field></shadow></value></block></value><next><block type=\"label_set_text\" id=\"LT:V2?R+o!.]Q@Vo^wW!\"><field name=\"NAME\">label0</field><value name=\"TEXT\"><shadow type=\"text\" id=\"loQ,b3o.q?8V]33;Lc!-\"><field name=\"TEXT\">Label</field></shadow><block type=\"variables_get\" id=\"[4lfPSsE]5b2:*{9Vq;8\"><field name=\"VAR\" id=\"P!jr;0u]KY!KB*N{={G8\">distance0</field></block></value><next><block type=\"label_set_text\" id=\"V7sK,YSOzi0}JOjRI,m6\"><field name=\"NAME\">label1</field><value name=\"TEXT\"><shadow type=\"text\" id=\"loQ,b3o.q?8V]33;Lc!-\"><field name=\"TEXT\">Label</field></shadow><block type=\"variables_get\" id=\",N#5;t/9d^nkBrM^:8Bo\"><field name=\"VAR\" id=\"|utR-9Rg$LkvX9KPWwO#\">distance1</field></block></value><next><block type=\"label_set_text\" id=\"QMbB:?ME$$fyDZ#xaaN4\"><field name=\"NAME\">label2</field><value name=\"TEXT\"><shadow type=\"text\" id=\"loQ,b3o.q?8V]33;Lc!-\"><field name=\"TEXT\">Label</field></shadow><block type=\"variables_get\" id=\"X0yXB5Tr)vpBKUstun,m\"><field name=\"VAR\" id=\"R.WtS@XY-c4}^LjIlUU:\">distance2</field></block></value><next><block type=\"label_set_text\" id=\"-@!Ki}guZIPV1xAWiT=U\"><field name=\"NAME\">dist3</field><value name=\"TEXT\"><shadow type=\"text\" id=\"loQ,b3o.q?8V]33;Lc!-\"><field name=\"TEXT\">Label</field></shadow><block type=\"variables_get\" id=\"yW{l#G(1[kN:$kuIfNkA\"><field name=\"VAR\" id=\"R.WtS@XY-c4}^LjIlUU:\">distance2</field></block></value><next><block type=\"label_set_text\" id=\"k%F$q14(dU]X]5@XV+K(\"><field name=\"NAME\">label3</field><value name=\"TEXT\"><shadow type=\"text\" id=\"loQ,b3o.q?8V]33;Lc!-\"><field name=\"TEXT\">Label</field></shadow><block type=\"power_get_battery_level\" id=\"4}%7Crck~_@A7:l@!Qmu\"></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block>","screen":[{"simulationName":"Built-in","type":"builtin","width":135,"height":240,"scale":0.67,"screenName":"","blockId":"","screenColorType":0,"rotation":3,"id":"builtin","createTime":1755164766842}],"logicWhenNum":0,"pythonCode":"import os, sys, io\nimport M5\nfrom M5 import *\nfrom unit import UWBUnit\nimport time\nimport math          \nimport network       \nimport requests      \n\ndist0 = None\ndist1 = None\ndist2 = None\ndist3 = None          \nlabel4 = None         # static \"Dist3:\" label\nbattery = None\nlabel0 = None\nlabel1 = None\nlabel2 = None\nlabel3 = None\nuwb_0 = None\n\ndistance0 = None\ndistance1 = None\ndistance2 = None\ndistance3 = None     \n\n# Coordinate fisse delle ancore \nanchor0 = (0.0, 0.0)   \nanchor1 = (1.7, 0.0)   \nanchor2 = (0.0, 6.3)   \nanchor3 = (1.7, 6.3)   \n\nposition_x = None\nposition_y = None\n\n# Configurazione Wi-Fi\nWIFI_SSID = 'iPhone di Marcos'\nWIFI_PASSWORD = 'tierloop'\nSERVER_URL = 'http://172.20.10.14:5050/log'\n\ndef setup():\n    global dist0, dist1, dist2, dist3, label4, battery, label0, label1, label2, label3\n    global uwb_0, distance0, distance1, distance2, distance3, position_x, position_y\n\n    M5.begin()\n    Widgets.setRotation(3)\n    Widgets.fillScreen(0x000000)\n\n    dist0 = Widgets.Label(\"Dist0:\", 10, 10, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n    dist1 = Widgets.Label(\"Dist1:\", 10, 35, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n    dist2 = Widgets.Label(\"Dist2:\", 10, 60, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n    label4 = Widgets.Label(\"Dist3:\", 10, 85, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n    battery = Widgets.Label(\"Battery:\", 10, 105, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n\n    label0 = Widgets.Label(\"dis0\", 70, 10, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n    label1 = Widgets.Label(\"dis1\", 70, 35, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n    label2 = Widgets.Label(\"dis2\", 70, 60, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n    dist3  = Widgets.Label(\"dis3\", 70, 85, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n    label3 = Widgets.Label(\"bat\",  90, 105, 1.0, 0xffffff, 0x222222, Widgets.FONTS.DejaVu18)\n\n    uwb_0 = UWBUnit(2, port=(33, 32), device_mode=UWBUnit.TAG, verbose=True)\n    uwb_0.set_measurement_interval(5)\n    uwb_0.set_measurement(True)\n    if uwb_0.isconnected():\n        print('Tag connesso')\n\n    # Connessione Wi-Fi\n    wlan = network.WLAN(network.STA_IF)\n    wlan.active(True)\n    wlan.connect(WIFI_SSID, WIFI_PASSWORD)\n    while not wlan.isconnected():\n        print('Connessione Wi-Fi in corso...')\n        time.sleep(1)\n    print('Wi-Fi connesso:', wlan.ifconfig())\n\ndef calculate_position_4(dists, anchors):\n    # Richiede TUTTE e 4 le distanze\n    if any(d is None for d in dists):\n        return None, None\n\n    x4, y4 = anchors[3]\n    d4 = dists[3]\n\n    # Costruiamo A (3x2) e b (3x1)\n    rows = []\n    bs = []\n    for i in range(3):  # confronta ancore 0,1,2 con la 3\n        xi, yi = anchors[i]\n        di = dists[i]\n        Ai = [2 * (xi - x4), 2 * (yi - y4)]\n        bi = (di**2 - d4**2 - xi**2 + x4**2 - yi**2 + y4**2)\n        rows.append(Ai)\n        bs.append(bi)\n\n    # Equazioni normali: (A^T A) p = A^T b\n    a11 = sum(r[0]*r[0] for r in rows)\n    a12 = sum(r[0]*r[1] for r in rows)\n    a22 = sum(r[1]*r[1] for r in rows)\n    b1  = sum(r[0]*bs[i] for i, r in enumerate(rows))\n    b2  = sum(r[1]*bs[i] for i, r in enumerate(rows))\n\n    det = a11*a22 - a12*a12\n    if det == 0:\n        return None, None\n\n    inv11 =  a22 / det\n    inv12 = -a12 / det\n    inv22 =  a11 / det\n\n    x = inv11*b1 + inv12*b2\n    y = inv12*b1 + inv22*b2\n    return x, y\n\ndef loop():\n    global dist0, dist1, dist2, dist3, label4, battery, label0, label1, label2, label3\n    global uwb_0, distance0, distance1, distance2, distance3, position_x, position_y\n\n    M5.update()\n    uwb_0.update()\n\n    distance0 = uwb_0.get_distance(0)\n    distance1 = uwb_0.get_distance(1)\n    distance2 = uwb_0.get_distance(2)\n    distance3 = uwb_0.get_distance(3)\n\n    label0.setText(str(distance0))\n    label1.setText(str(distance1))\n    label2.setText(str(distance2))\n    dist3.setText(str(distance3))\n    label3.setText(str(Power.getBatteryLevel()))\n\n    position_x, position_y = calculate_position_4(\n        [distance0, distance1, distance2, distance3],\n        [anchor0, anchor1, anchor2, anchor3]\n    )\n\n    if position_x is not None:\n        print(f'Posizione: ({position_x:.2f}, {position_y:.2f}) m')\n\n        data = {\n            'dist0': distance0,\n            'dist1': distance1,\n            'dist2': distance2,\n            'dist3': distance3,\n            'x': position_x,\n            'y': position_y\n        }\n        try:\n            response = requests.post(SERVER_URL, json=data)\n            response.close()\n            print('Dati inviati al PC')\n        except Exception as e:\n            print('Errore invio:', str(e))\n    else:\n        print('Impossibile calcolare la posizione (sistema degenerato o dati mancanti)')\n\n    time.sleep_ms(200)  \n\nif __name__ == '__main__':\n    try:\n        setup()\n        while True:\n            loop()\n    except (Exception, KeyboardInterrupt) as e:\n        try:\n            from utility import print_error_msg\n            print_error_msg(e)\n        except ImportError:\n            print(\"please update to latest firmware\")","customList":[]}