{"version":"V2.0","versionNumber":"V2.3.4","type":"cores3","components":[{"name":"page0","type":"lvgl_page","layer":0,"screenId":"builtin","screenName":"","id":"eBD45Swrp-4gr#F6","createTime":1756975053477,"backgroundColor":"#ffffff","isLVGL":true,"isSelected":true}],"resources":[{"hardware":["hardware_button","hardware_pin_button","imu","speaker","touch","als","mic","sdcard","i2c"]},{"unit":["unit_gesture"]}],"units":[{"type":"unit_gesture","name":"gesture_0","portList":["A","PAHUB","Custom"],"portType":"A","userPort":[22,21],"id":"y44&^qyK4lkNY1@S","createTime":1757146529338,"bus":"i2c0","pahubPortList":[0,1,2,3,4,5],"pahubPort":0,"initBlockId":"BtthJmP3H`s=(Nf9+Ime"}],"hats":[],"bases":[],"i2cs":[{"id":"i2c0","portType":"A","userPort":[22,21],"freq":"100000","blockId":"2%`a6T`b7%9BXmKRlVjR"}],"blockly":"<block type=\"basic_on_setup\" id=\"setup_block\" deletable=\"false\" x=\"50\" y=\"50\"><mutation isBegin=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_begin\" id=\"3v$onO{X=;*hy!@#;E-,\"><next><block type=\"i2c_init\" id=\"2%`a6T`b7%9BXmKRlVjR\"><field name=\"NAME\">0</field><field name=\"FREQ\">100000</field><value name=\"SCL\"><shadow type=\"math_number\" id=\"=57|Qs6C/e$N,8OM%[[-\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">1</field></shadow></value><value name=\"SDA\"><shadow type=\"math_number\" id=\"5qH_U/Bov8E%@5ACJ}}D\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">2</field></shadow></value><next><block type=\"unit_gesture_init\" id=\"BtthJmP3H`s=(Nf9+Ime\"><field name=\"NAME\">gesture_0</field><next><block type=\"lvgl_page_screen_load\" id=\"S:Egsu;GA6f8m2fh.,PS\"><field name=\"NAME\">page0</field></block></next></block></next></block></next></block></statement></block><block type=\"basic_on_loop\" id=\"loop_block\" deletable=\"false\" x=\"450\" y=\"50\"><mutation isUpdate=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_update\" id=\"KT:K#mAV:bs4sTaE*xnQ\"></block></statement></block>","screen":[{"simulationName":"Built-in","type":"builtin","width":320,"height":240,"scale":0.77,"screenName":"","blockId":"","screenColorType":0,"rotation":1,"id":"builtin","createTime":1756975053477}],"logicWhenNum":0,"pythonCode":"import os, sys, io\nimport M5\nfrom M5 import *\nimport m5ui\nimport lvgl as lv\nimport requests2\nfrom hardware import I2C\nfrom hardware import Pin\nfrom unit import GestureUnit\nimport time\nimport network\n\npage0 = None\nlabel0 = None\nlabel_patient = None\nhttp_req = None\ni2c0 = None\ngesture_0 = None\n\ngesture_num = None\ndevice_id = 'M5_001'\nlocation = 'Stanza 101'\nlast_action_time = 0\nfeedback_duration = 2\nSERVER_URL = 'http://172.20.10.2:5050/command'\nWIFI_SSID = 'iPhone di Marcos'\nWIFI_PASSWORD = 'tierloop'\n\ndef log_gesture(action):\n    global device_id, location\n    timestamp = time.time()\n    try:\n        with open('log.txt', 'a') as f:\n            f.write(f\"{timestamp}: {action} - Device: {device_id} - Location: {location}\\n\")\n    except Exception as e:\n        print(f\"Errore scrittura log: {e}\")\n\ndef send_request(action):\n    global http_req, device_id, location\n    payload = {\n        'action': action,\n        'device_id': device_id,\n        'location': location,\n        'timestamp': time.time()\n    }\n    print(f\"Invio richiesta: {action}, payload: {payload}\")\n    try:\n        http_req = requests2.post(SERVER_URL, json=payload, timeout=3)\n        print(f\"Risposta server: {http_req.status_code}\")\n        if http_req.status_code == 200:\n            log_gesture(action)\n            return True\n        else:\n            print(f\"Errore server: {http_req.status_code}\")\n            return False\n    except Exception as e:\n        print(f\"Errore connessione: {e}\")\n        return False\n\ndef request_water():\n    global last_action_time\n    label0.set_text(str('Richiesta Acqua Rilevata'))\n    page0.set_bg_color(0xff6666, 255, 0)\n    last_action_time = time.time()\n    if send_request('request_water'):\n        label0.set_text(str('Richiesta Acqua Inoltrata, attendere...'))\n    else:\n        label0.set_text(str('Errore: Richiesta Acqua non inviata'))\n\ndef report_pain():\n    global last_action_time\n    label0.set_text(str('Segnalazione Dolore Rilevata'))\n    page0.set_bg_color(0xff6666, 255, 0)\n    last_action_time = time.time()\n    if send_request('report_pain'):\n        label0.set_text(str('Segnalazione Dolore Inoltrata, attendere...'))\n    else:\n        label0.set_text(str('Errore: Segnalazione Dolore non inviata'))\n\ndef urgent_assistance():\n    global last_action_time\n    label0.set_text(str('Assistenza Urgente Rilevata'))\n    page0.set_bg_color(0x66ff99, 255, 0)\n    last_action_time = time.time()\n    if send_request('urgent_assistance'):\n        label0.set_text(str('Assistenza Urgente Inoltrata, attendere...'))\n    else:\n        label0.set_text(str('Errore: Assistenza Urgente non inviata'))\n\ndef setup():\n    global page0, label0, label_patient, i2c0, gesture_0, gesture_num\n\n    M5.begin()\n    Widgets.setRotation(1)\n    m5ui.init()\n    page0 = m5ui.M5Page(bg_c=0xffffff)\n    label0 = m5ui.M5Label(\"label0\", x=15, y=105, text_c=0x000000, bg_c=0xffffff, bg_opa=0, font=lv.font_montserrat_24, parent=page0)\n    label_patient = m5ui.M5Label(\"patient_id\", x=150, y=10, text_c=0x000000, bg_c=0xffffff, bg_opa=0, font=lv.font_montserrat_16, parent=page0)\n    label_patient.set_text(f\"Paziente: {device_id}\")\n\n    wlan = network.WLAN(network.STA_IF)\n    wlan.active(True)\n    wlan.connect(WIFI_SSID, WIFI_PASSWORD)\n    print(\"Connessione WiFi in corso...\")\n    while not wlan.isconnected():\n        time.sleep(1)\n    print(\"Connesso a WiFi: \" + str(wlan.ifconfig()))\n\n    i2c0 = I2C(0, scl=Pin(1), sda=Pin(2), freq=100000)\n    gesture_0 = GestureUnit(i2c0)\n    gesture_0.set_gesture_highrate(True)\n    page0.screen_load()\n    page0.set_bg_color(0xcccccc, 255, 0)\n    label0.set_text(str('In attesa di gesto...'))\n    \n    try:\n        with open('log.txt', 'r') as f:\n            pass\n    except:\n        with open('log.txt', 'w') as f:\n            f.write(\"Log dei gesti\\n\")\n\ndef loop():\n    global page0, label0, i2c0, gesture_0, gesture_num, last_action_time\n    M5.update()\n    \n    if last_action_time and (time.time() - last_action_time > feedback_duration):\n        label0.set_text(str('In attesa di gesto...'))\n        page0.set_bg_color(0xcccccc, 255, 0)\n        last_action_time = 0\n\n    gesture_num = gesture_0.get_hand_gestures()\n    print(f\"Gesture rilevata: {gesture_num}\")  # Debug\n    if last_action_time == 0:\n        if gesture_num == 1:\n            request_water()\n        elif gesture_num == 2:\n            report_pain()\n        elif gesture_num == 4:\n            urgent_assistance()\n        else:\n            if label0.get_text() not in [\n                'Richiesta Acqua Rilevata', 'Richiesta Acqua Inoltrata, attendere...', 'Errore: Richiesta Acqua non inviata',\n                'Segnalazione Dolore Rilevata', 'Segnalazione Dolore Inoltrata, attendere...', 'Errore: Segnalazione Dolore non inviata',\n                'Assistenza Urgente Rilevata', 'Assistenza Urgente Inoltrata, attendere...', 'Errore: Assistenza Urgente non inviata'\n            ]:\n                label0.set_text(str('In attesa di gesto...'))\n                page0.set_bg_color(0xcccccc, 255, 0)\n    \n    time.sleep(0.1)\n\nif __name__ == '__main__':\n    try:\n        setup()\n        while True:\n            loop()\n    except (Exception, KeyboardInterrupt) as e:\n        try:\n            m5ui.deinit()\n            from utility import print_error_msg\n            print_error_msg(e)\n        except ImportError:\n            print(\"please update to latest firmware\")","customList":[]}